{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "startSlot",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endSlot",
          "type": "uint64"
        }
      ],
      "name": "InvalidSlotRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "subscriptionId",
          "type": "bytes32"
        }
      ],
      "name": "SubscriptionAlreadyActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "subscriptionId",
          "type": "bytes32"
        }
      ],
      "name": "SubscriptionNotActive",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "subscriptionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "startSlot",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "endSlot",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "sourceChainId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "sourceAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "eventSig",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct Subscription",
          "name": "subscription",
          "type": "tuple"
        }
      ],
      "name": "Subscribe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "subscriptionId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "sourceChainId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "sourceAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "eventSig",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct Subscription",
          "name": "subscription",
          "type": "tuple"
        }
      ],
      "name": "Unsubscribe",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventsPublished",
      "outputs": [
        {
          "internalType": "enum PublishStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_sourceChainId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_sourceAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_callbackAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_eventSig",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_startSlot",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_endSlot",
          "type": "uint64"
        }
      ],
      "name": "subscribe",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "subscriptions",
      "outputs": [
        {
          "internalType": "enum SubscriptionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_sourceChainId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_sourceAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_eventSig",
          "type": "bytes32"
        }
      ],
      "name": "unsubscribe",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610527806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633cca331c14610051578063651389591461008a57806394259c6c146100ab57806397229719146100db575b600080fd5b61007461005f366004610361565b60016020526000908152604090205460ff1681565b6040516100819190610390565b60405180910390f35b61009d6100983660046103f2565b6100ee565b604051908152602001610081565b6100ce6100b9366004610361565b60026020526000908152604090205460ff1681565b604051610081919061045f565b61009d6100e9366004610473565b610259565b60008060405180608001604052808963ffffffff168152602001886001600160a01b03168152602001876001600160a01b0316815260200186815250905060008160405160200161013f91906104af565b60408051601f1981840301815291905280516020909101209050600160008281526002602052604090205460ff16600181111561017e5761017e61037a565b036101a457604051634702100760e11b8152600481018290526024015b60405180910390fd5b6000818152600260205260409020805460ff1916600117905567ffffffffffffffff80861690851610156101ff57604051633c04832160e21b815267ffffffffffffffff80871660048301528516602482015260440161019b565b8367ffffffffffffffff168567ffffffffffffffff16827f5c727204c662dd3d053e4f52d9c6872a50938b7af3f1497df385c3b5f4e5eb738560405161024591906104af565b60405180910390a498975050505050505050565b60008060405180608001604052808663ffffffff168152602001856001600160a01b03168152602001336001600160a01b031681526020018481525090506000816040516020016102aa91906104af565b60408051601f19818403018152919052805160209091012090506000808281526002602052604090205460ff1660018111156102e8576102e861037a565b036103085760405162191d2960e11b81526004810182905260240161019b565b60008181526002602052604090819020805460ff191690555181907f0a82aeeb867dc22c12ad75195fd9acfc1a0f838cd64348e4ed6a25e199def9c8906103509085906104af565b60405180910390a295945050505050565b60006020828403121561037357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106103a4576103a461037a565b91905290565b803563ffffffff811681146103be57600080fd5b919050565b80356001600160a01b03811681146103be57600080fd5b803567ffffffffffffffff811681146103be57600080fd5b60008060008060008060c0878903121561040b57600080fd5b610414876103aa565b9550610422602088016103c3565b9450610430604088016103c3565b935060608701359250610445608088016103da565b915061045360a088016103da565b90509295509295509295565b60208101600283106103a4576103a461037a565b60008060006060848603121561048857600080fd5b610491846103aa565b925061049f602085016103c3565b9150604084013590509250925092565b815163ffffffff1681526020808301516001600160a01b039081169183019190915260408084015190911690820152606091820151918101919091526080019056fea264697066735822122030f05064d0b104ed0bcde3dae6b1387cf72d49641b7d6a92ab97ef408c7069bb64736f6c63430008100033",
    "sourceMap": "335:2199:125:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80633cca331c14610051578063651389591461008a57806394259c6c146100ab57806397229719146100db575b600080fd5b61007461005f366004610361565b60016020526000908152604090205460ff1681565b6040516100819190610390565b60405180910390f35b61009d6100983660046103f2565b6100ee565b604051908152602001610081565b6100ce6100b9366004610361565b60026020526000908152604090205460ff1681565b604051610081919061045f565b61009d6100e9366004610473565b610259565b60008060405180608001604052808963ffffffff168152602001886001600160a01b03168152602001876001600160a01b0316815260200186815250905060008160405160200161013f91906104af565b60408051601f1981840301815291905280516020909101209050600160008281526002602052604090205460ff16600181111561017e5761017e61037a565b036101a457604051634702100760e11b8152600481018290526024015b60405180910390fd5b6000818152600260205260409020805460ff1916600117905567ffffffffffffffff80861690851610156101ff57604051633c04832160e21b815267ffffffffffffffff80871660048301528516602482015260440161019b565b8367ffffffffffffffff168567ffffffffffffffff16827f5c727204c662dd3d053e4f52d9c6872a50938b7af3f1497df385c3b5f4e5eb738560405161024591906104af565b60405180910390a498975050505050505050565b60008060405180608001604052808663ffffffff168152602001856001600160a01b03168152602001336001600160a01b031681526020018481525090506000816040516020016102aa91906104af565b60408051601f19818403018152919052805160209091012090506000808281526002602052604090205460ff1660018111156102e8576102e861037a565b036103085760405162191d2960e11b81526004810182905260240161019b565b60008181526002602052604090819020805460ff191690555181907f0a82aeeb867dc22c12ad75195fd9acfc1a0f838cd64348e4ed6a25e199def9c8906103509085906104af565b60405180910390a295945050505050565b60006020828403121561037357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106103a4576103a461037a565b91905290565b803563ffffffff811681146103be57600080fd5b919050565b80356001600160a01b03811681146103be57600080fd5b803567ffffffffffffffff811681146103be57600080fd5b60008060008060008060c0878903121561040b57600080fd5b610414876103aa565b9550610422602088016103c3565b9450610430604088016103c3565b935060608701359250610445608088016103da565b915061045360a088016103da565b90509295509295509295565b60208101600283106103a4576103a461037a565b60008060006060848603121561048857600080fd5b610491846103aa565b925061049f602085016103c3565b9150604084013590509250925092565b815163ffffffff1681526020808301516001600160a01b039081169183019190915260408084015190911690820152606091820151918101919091526080019056fea264697066735822122030f05064d0b104ed0bcde3dae6b1387cf72d49641b7d6a92ab97ef408c7069bb64736f6c63430008100033",
    "sourceMap": "335:2199:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:56:122;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;837:960:125;;;;;;:::i;:::-;;:::i;:::-;;;1806:25:146;;;1794:2;1779:18;837:960:125;1660:177:146;723:59:122;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1888:644:125:-;;;;;;:::i;:::-;;:::i;837:960::-;1056:7;1075:32;1122:73;;;;;;;;1135:14;1122:73;;;;;;1151:14;-1:-1:-1;;;;;1122:73:125;;;;;1167:16;-1:-1:-1;;;;;1122:73:125;;;;;1185:9;1122:73;;;1075:120;;1205:22;1251:12;1240:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1240:24:125;;;;;;;;;1230:35;;1240:24;1230:35;;;;;-1:-1:-1;1313:29:125;1280;;;;:13;:29;;;;;;;;;:62;;;;;;;:::i;:::-;;1276:141;;1365:41;;-1:-1:-1;;;1365:41:125;;;;;1806:25:146;;;1779:18;;1365:41:125;;;;;;;;1276:141;1426:29;;;;:13;:29;;;;;:61;;-1:-1:-1;;1426:61:125;1458:29;1426:61;;;1589:21;;;;;;;;1585:97;;;1633:38;;-1:-1:-1;;;1633:38:125;;3168:18:146;3213:15;;;1633:38:125;;;3195:34:146;3265:15;;3245:18;;;3238:43;3131:18;;1633:38:125;2988:299:146;1585:97:125;1735:8;1697:61;;1723:10;1697:61;;1707:14;1697:61;1745:12;1697:61;;;;;;:::i;:::-;;;;;;;;1776:14;837:960;-1:-1:-1;;;;;;;;837:960:125:o;1888:644::-;2009:7;2032:32;2079:67;;;;;;;;2092:14;2079:67;;;;;;2108:14;-1:-1:-1;;;;;2079:67:125;;;;;2124:10;-1:-1:-1;;;;;2079:67:125;;;;;2136:9;2079:67;;;2032:114;;2156:22;2202:12;2191:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2191:24:125;;;;;;;;;2181:35;;2191:24;2181:35;;;;;-1:-1:-1;2264:30:125;2231:29;;;;:13;:29;;;;;;;;;:63;;;;;;;:::i;:::-;;2227:138;;2317:37;;-1:-1:-1;;;2317:37:125;;;;;1806:25:146;;;1779:18;;2317:37:125;1660:177:146;2227:138:125;2406:30;2374:29;;;:13;:29;;;;;;;:62;;-1:-1:-1;;2374:62:125;;;2452:41;2374:29;;2452:41;;;;2480:12;;2452:41;:::i;:::-;;;;;;;;2511:14;1888:644;-1:-1:-1;;;;;1888:644:125:o;14:180:146:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:146;;14:180;-1:-1:-1;14:180:146:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:250;482:2;467:18;;515:1;504:13;;494:47;;521:18;;:::i;:::-;550:25;;;331:250;:::o;586:163::-;653:20;;713:10;702:22;;692:33;;682:61;;739:1;736;729:12;682:61;586:163;;;:::o;754:173::-;822:20;;-1:-1:-1;;;;;871:31:146;;861:42;;851:70;;917:1;914;907:12;932:171;999:20;;1059:18;1048:30;;1038:41;;1028:69;;1093:1;1090;1083:12;1108:547;1209:6;1217;1225;1233;1241;1249;1302:3;1290:9;1281:7;1277:23;1273:33;1270:53;;;1319:1;1316;1309:12;1270:53;1342:28;1360:9;1342:28;:::i;:::-;1332:38;;1389;1423:2;1412:9;1408:18;1389:38;:::i;:::-;1379:48;;1446:38;1480:2;1469:9;1465:18;1446:38;:::i;:::-;1436:48;;1531:2;1520:9;1516:18;1503:32;1493:42;;1554:38;1587:3;1576:9;1572:19;1554:38;:::i;:::-;1544:48;;1611:38;1644:3;1633:9;1629:19;1611:38;:::i;:::-;1601:48;;1108:547;;;;;;;;:::o;1842:255::-;1998:2;1983:18;;2031:1;2020:13;;2010:47;;2037:18;;:::i;2102:326::-;2178:6;2186;2194;2247:2;2235:9;2226:7;2222:23;2218:32;2215:52;;;2263:1;2260;2253:12;2215:52;2286:28;2304:9;2286:28;:::i;:::-;2276:38;;2333;2367:2;2356:9;2352:18;2333:38;:::i;:::-;2323:48;;2418:2;2407:9;2403:18;2390:32;2380:42;;2102:326;;;;;:::o;2433:550::-;2664:13;;2679:10;2660:30;2642:49;;2738:4;2726:17;;;2720:24;-1:-1:-1;;;;;2820:21:146;;;2798:20;;;2791:51;;;;2902:4;2890:17;;;2884:24;2880:33;;;2858:20;;;2851:63;2970:4;2958:17;;;2952:24;2930:20;;;2923:54;;;;2629:3;2614:19;;2433:550::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "eventsPublished(bytes32)": "3cca331c",
    "subscribe(uint32,address,address,bytes32,uint64,uint64)": "65138959",
    "subscriptions(bytes32)": "94259c6c",
    "unsubscribe(uint32,address,bytes32)": "97229719"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"startSlot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endSlot\",\"type\":\"uint64\"}],\"name\":\"InvalidSlotRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"SubscriptionAlreadyActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"SubscriptionNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"startSlot\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"endSlot\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"sourceChainId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"eventSig\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct Subscription\",\"name\":\"subscription\",\"type\":\"tuple\"}],\"name\":\"Subscribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"sourceChainId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"eventSig\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct Subscription\",\"name\":\"subscription\",\"type\":\"tuple\"}],\"name\":\"Unsubscribe\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventsPublished\",\"outputs\":[{\"internalType\":\"enum PublishStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_sourceChainId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_eventSig\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_startSlot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_endSlot\",\"type\":\"uint64\"}],\"name\":\"subscribe\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"enum SubscriptionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_sourceChainId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_sourceAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_eventSig\",\"type\":\"bytes32\"}],\"name\":\"unsubscribe\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Succinct Labs\",\"kind\":\"dev\",\"methods\":{\"subscribe(uint32,address,address,bytes32,uint64,uint64)\":{\"details\":\"The block ranges use as a signal to off-chain, and are NOT enforced by the publisher.     If events should only a certain range should be valid, the callbackAddress should do their     own validation when handling the publish.\"},\"unsubscribe(uint32,address,bytes32)\":{\"details\":\"Only the original callbackAddress contract will be able to unsubscribe.\"}},\"title\":\"TelepathySubscriber\",\"version\":1},\"userdoc\":{\"events\":{\"Subscribe(bytes32,uint64,uint64,(uint32,address,address,bytes32))\":{\"notice\":\"Emitted when a new subscription is created.\"},\"Unsubscribe(bytes32,(uint32,address,address,bytes32))\":{\"notice\":\"Emitted when a subscription is cancelled.\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"This allows contracts to subscribe to cross-chain events from a source contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/pubsub/TelepathySubscriber.sol\":\"TelepathySubscriber\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@optimism-bedrock/=lib/optimism-bedrock-contracts/\",\":@uniswap/=lib/\",\":Solidity-RLP/=lib/Solidity-RLP/contracts/\",\":curve-merkle-oracle/=lib/curve-merkle-oracle/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":optimism-bedrock-contracts/=lib/optimism-bedrock-contracts/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"lib/optimism-bedrock-contracts/Bytes.sol\":{\"keccak256\":\"0x7aca6593fadf438ee9cd090d8fdc8f94a5202a2eb7f764c9a86f207712d87a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aac32157885c5a08bd0bc7dcd5511f66db12bb20d0c263dd7be9f58b91538fc1\",\"dweb:/ipfs/Qmb1iG11Z53yt9wNbGsuTvoydJXFosDDpWwRSADKyqiCjw\"]},\"lib/optimism-bedrock-contracts/rlp/RLPReader.sol\":{\"keccak256\":\"0x7fec14965f928924f6299a51c4220d2daf1ed46185d1e5706b6bd3d2e0340a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae3b6784b641557bc6757c8dea8c8c459343d408f9a18f962763dba341e64e95\",\"dweb:/ipfs/QmbqSmwkzrYbtc4ov9fEfReA4RYUgMBd12dPCm2KGXdRQW\"]},\"lib/optimism-bedrock-contracts/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"lib/optimism-bedrock-contracts/trie/MerkleTrie.sol\":{\"keccak256\":\"0xd27fc945d6dd2821636d840f3766f817823c8e9fbfdb87c2da7c73e4292d2f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497cec37d09ebcdc8d1cccac608a4a0b9b9d83eac6cc7c9e8b73c4c6644e2209\",\"dweb:/ipfs/QmUYMsCcgU6epspvKV9Y6anHyyMb4hd1xVzUZheBY9mfG7\"]},\"src/amb/SourceAMB.sol\":{\"keccak256\":\"0x2a0b191f2bef18df309cf375692236ce126252d2c36ec706bc5256a8fe15854a\",\"urls\":[\"bzz-raw://4f19ed3248465b97cde5740a4b6e2e4db62896ba0cfc1f66c30c8f7207b98ca6\",\"dweb:/ipfs/QmRCnF5CEoWRszZP1nCrnh7fvBADPRrqiQu6o9tpcr4K5P\"]},\"src/amb/TargetAMB.sol\":{\"keccak256\":\"0x19b30cec0b4065eecd47f9c6055a4c7399428e28617512ce1ecd9700d27e0e3e\",\"urls\":[\"bzz-raw://2c034edcf6e2e9e581731189bc15e15d8654cf2db6a97ca47ebcc7dfb230a64b\",\"dweb:/ipfs/QmUKijg36jXx6hYv85u7EkDAdAqrX1m5YMwDuWoxa3ez2a\"]},\"src/amb/TelepathyAccess.sol\":{\"keccak256\":\"0x75161809fd00088b823b901fc1c9de3b55462333d343a93600ce25b3919990b6\",\"urls\":[\"bzz-raw://3c21ef4fa0e757c77960aa601e0e2954e7803bfa3778b34a45dc257369757609\",\"dweb:/ipfs/QmY234B6N5Y9ndu7VHwXwjpg9v4vCmDfjYsubQXxvkmDQ3\"]},\"src/amb/TelepathyRouter.sol\":{\"keccak256\":\"0x7f7dbf6d6920e8dd60394f49ed4d71c885a7bbdd77260ca44888408332e1de3f\",\"urls\":[\"bzz-raw://ba08ade28a866dd6a66fb849a2dedcd18d08af201930908a841ea39f80a01f40\",\"dweb:/ipfs/QmSTRSgvtvQnKM8bBPGWBkZ3AbEkrzjaaLiVnBedMrTeNu\"]},\"src/amb/TelepathyStorage.sol\":{\"keccak256\":\"0xc2e4978e759d283457b02b90a77b9a4ea359eeade41b8937c57d6dc3026ff04c\",\"urls\":[\"bzz-raw://9d2aa0835f096d4d7dcf3100e05d45a1b7b838d469bd78ba5c6eaf0dcebceb05\",\"dweb:/ipfs/QmXyt6ZcHWkSsyREC6fhvsD1z6EVzuMcJadjXDcds6smJY\"]},\"src/amb/interfaces/ITelepathy.sol\":{\"keccak256\":\"0x8e0f1c5f335402c1581387491da7571cb1cb3a07e622db9fa15c6c2a06b2546a\",\"urls\":[\"bzz-raw://85900c5ae744016f22d1452446e9cc580721a3e8264c09605390a8decd7b8189\",\"dweb:/ipfs/QmRZh5L18VxGeQ1niPzRFL9J4iigiFbp2knxQjRP3LmH9V\"]},\"src/libraries/BeaconChainForks.sol\":{\"keccak256\":\"0xdb54fb41ea01396656af5e6840553244d9fece2bb6580894f05ec6ca27628d83\",\"urls\":[\"bzz-raw://8f4413e51082324ca158da2b4047f611a46a16e2c36238ddd5fee4f3d37ba1db\",\"dweb:/ipfs/QmX2Pxju2Qu82v6b7WQxdoovSikDWH46dE3Qm1NdfqFh3v\"]},\"src/libraries/MessageEncoding.sol\":{\"keccak256\":\"0xa7d014c247a34bbfcfa9175ad175483cf6cc1c0a0d8277dc30e0f7e47f1707a7\",\"urls\":[\"bzz-raw://8ccfb15112c94523fed2ecb6a87ca4a6f891f09b9831a58c05c70ff04b8082dc\",\"dweb:/ipfs/Qma9zqMUS5ygBKaRAZeqLr4twtyTqBZTbSHu8uRDdLmojk\"]},\"src/libraries/SimpleSerialize.sol\":{\"keccak256\":\"0xd19fff646b44f7406dd6aeb45abd38c8c0de4bb15ee524569c3a3d89aa6e7054\",\"urls\":[\"bzz-raw://2b88dd0c6d895dd013ea7a1896ee1a4012cfa07eb391e610f90602fd0f8a3e5a\",\"dweb:/ipfs/QmUHD3dCxg8TZBX5RgHyKMBSZgLikqw1XZgZLdfGCLHqhY\"]},\"src/libraries/StateProofHelper.sol\":{\"keccak256\":\"0x70e27315c29cb4c7d48a94f42190ffdc6eb01563b21e69a53313cae0dfc64c47\",\"urls\":[\"bzz-raw://1282d7634bf116983291805d99dda36a2304dbe6ebebc8d488d218d948f3b4a6\",\"dweb:/ipfs/QmdZreFEWMABoZLwq1J91BF5ja5ZbXe9EQkAd28R1VxJkk\"]},\"src/libraries/Typecast.sol\":{\"keccak256\":\"0x3d94eaa60f2d48c5f21e443c23f1c140b2a2ace09c0e1350810dd2b09faf7c1a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://adeaa9e8df8cfed643c6b25c1726da69658358eca52c0f5fc2972a2abc92e65d\",\"dweb:/ipfs/QmT3UKsZUzzRFg1H6yXfhGn4jEaVkKHJx2PuneebcqKgAr\"]},\"src/lightclient/interfaces/ILightClient.sol\":{\"keccak256\":\"0x17f71ba0004a4af61cae3499a05decfe0cb2a4479f372eab3e1e946b7e03a051\",\"urls\":[\"bzz-raw://a3d5c74269ab86e0c99c5caedc7c4cd4819c2f1a57bb8217b0dc380b10e14070\",\"dweb:/ipfs/QmPk5DsfMAF535JmB4rB5hxFFTr6EmD1AXCvK7zNUu3EEo\"]},\"src/pubsub/PubSubStorage.sol\":{\"keccak256\":\"0xb48749438ffb733c688167748b15c8969e8101e3135798a48c1c37d6f5df8a6b\",\"urls\":[\"bzz-raw://121c53ba9e7d0186a4440ce2f8c9106d0c5e16ff5028efb1c36cd029d3e57f6e\",\"dweb:/ipfs/QmSSBhEX3QJBmE2Rof99cwmFJAesGdLuSRBoYfHNSWJXQL\"]},\"src/pubsub/TelepathySubscriber.sol\":{\"keccak256\":\"0xc2821363e4a6379a8d879954726e91881b011c5ca573ddc09aa927737b233bfd\",\"urls\":[\"bzz-raw://9922a70f814a7caac3f4c5119bee155d9dc1ac0a4d6090fc4753ac9ad485eec4\",\"dweb:/ipfs/Qma4cKKo2d7pkMmzKXVudtr43VSmQaRpH2HaDvWVR8PPj3\"]},\"src/pubsub/interfaces/IPubSub.sol\":{\"keccak256\":\"0xbf3fbeb90e44355f0d18502908551df018a68e89942527cd1102b33b24a4cd8c\",\"urls\":[\"bzz-raw://d8f40b30a82557e93093614445463bfc149e01035c69f61cf2fe1a465bce0a2a\",\"dweb:/ipfs/QmQh4GAtaDCKTCBLUxPmDgWaDt2GeFUjcSki3s4n26Uswt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "startSlot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "endSlot",
              "type": "uint64"
            }
          ],
          "type": "error",
          "name": "InvalidSlotRange"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "subscriptionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "SubscriptionAlreadyActive"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "subscriptionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "SubscriptionNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "subscriptionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "startSlot",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "endSlot",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "struct Subscription",
              "name": "subscription",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "sourceChainId",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "sourceAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "eventSig",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Subscribe",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "subscriptionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct Subscription",
              "name": "subscription",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "sourceChainId",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "sourceAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "callbackAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "eventSig",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unsubscribe",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eventsPublished",
          "outputs": [
            {
              "internalType": "enum PublishStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_sourceChainId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "_sourceAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_callbackAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_eventSig",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_startSlot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "_endSlot",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "subscribe",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "subscriptions",
          "outputs": [
            {
              "internalType": "enum SubscriptionStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_sourceChainId",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "_sourceAddress",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_eventSig",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unsubscribe",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "subscribe(uint32,address,address,bytes32,uint64,uint64)": {
            "details": "The block ranges use as a signal to off-chain, and are NOT enforced by the publisher.     If events should only a certain range should be valid, the callbackAddress should do their     own validation when handling the publish."
          },
          "unsubscribe(uint32,address,bytes32)": {
            "details": "Only the original callbackAddress contract will be able to unsubscribe."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@optimism-bedrock/=lib/optimism-bedrock-contracts/",
        ":@uniswap/=lib/",
        ":Solidity-RLP/=lib/Solidity-RLP/contracts/",
        ":curve-merkle-oracle/=lib/curve-merkle-oracle/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":optimism-bedrock-contracts/=lib/optimism-bedrock-contracts/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/pubsub/TelepathySubscriber.sol": "TelepathySubscriber"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a",
        "urls": [
          "bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626",
          "dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
        "urls": [
          "bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
          "dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "lib/optimism-bedrock-contracts/Bytes.sol": {
        "keccak256": "0x7aca6593fadf438ee9cd090d8fdc8f94a5202a2eb7f764c9a86f207712d87a48",
        "urls": [
          "bzz-raw://aac32157885c5a08bd0bc7dcd5511f66db12bb20d0c263dd7be9f58b91538fc1",
          "dweb:/ipfs/Qmb1iG11Z53yt9wNbGsuTvoydJXFosDDpWwRSADKyqiCjw"
        ],
        "license": "MIT"
      },
      "lib/optimism-bedrock-contracts/rlp/RLPReader.sol": {
        "keccak256": "0x7fec14965f928924f6299a51c4220d2daf1ed46185d1e5706b6bd3d2e0340a56",
        "urls": [
          "bzz-raw://ae3b6784b641557bc6757c8dea8c8c459343d408f9a18f962763dba341e64e95",
          "dweb:/ipfs/QmbqSmwkzrYbtc4ov9fEfReA4RYUgMBd12dPCm2KGXdRQW"
        ],
        "license": "MIT"
      },
      "lib/optimism-bedrock-contracts/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "lib/optimism-bedrock-contracts/trie/MerkleTrie.sol": {
        "keccak256": "0xd27fc945d6dd2821636d840f3766f817823c8e9fbfdb87c2da7c73e4292d2f7f",
        "urls": [
          "bzz-raw://497cec37d09ebcdc8d1cccac608a4a0b9b9d83eac6cc7c9e8b73c4c6644e2209",
          "dweb:/ipfs/QmUYMsCcgU6epspvKV9Y6anHyyMb4hd1xVzUZheBY9mfG7"
        ],
        "license": "MIT"
      },
      "src/amb/SourceAMB.sol": {
        "keccak256": "0x2a0b191f2bef18df309cf375692236ce126252d2c36ec706bc5256a8fe15854a",
        "urls": [
          "bzz-raw://4f19ed3248465b97cde5740a4b6e2e4db62896ba0cfc1f66c30c8f7207b98ca6",
          "dweb:/ipfs/QmRCnF5CEoWRszZP1nCrnh7fvBADPRrqiQu6o9tpcr4K5P"
        ],
        "license": null
      },
      "src/amb/TargetAMB.sol": {
        "keccak256": "0x19b30cec0b4065eecd47f9c6055a4c7399428e28617512ce1ecd9700d27e0e3e",
        "urls": [
          "bzz-raw://2c034edcf6e2e9e581731189bc15e15d8654cf2db6a97ca47ebcc7dfb230a64b",
          "dweb:/ipfs/QmUKijg36jXx6hYv85u7EkDAdAqrX1m5YMwDuWoxa3ez2a"
        ],
        "license": null
      },
      "src/amb/TelepathyAccess.sol": {
        "keccak256": "0x75161809fd00088b823b901fc1c9de3b55462333d343a93600ce25b3919990b6",
        "urls": [
          "bzz-raw://3c21ef4fa0e757c77960aa601e0e2954e7803bfa3778b34a45dc257369757609",
          "dweb:/ipfs/QmY234B6N5Y9ndu7VHwXwjpg9v4vCmDfjYsubQXxvkmDQ3"
        ],
        "license": null
      },
      "src/amb/TelepathyRouter.sol": {
        "keccak256": "0x7f7dbf6d6920e8dd60394f49ed4d71c885a7bbdd77260ca44888408332e1de3f",
        "urls": [
          "bzz-raw://ba08ade28a866dd6a66fb849a2dedcd18d08af201930908a841ea39f80a01f40",
          "dweb:/ipfs/QmSTRSgvtvQnKM8bBPGWBkZ3AbEkrzjaaLiVnBedMrTeNu"
        ],
        "license": null
      },
      "src/amb/TelepathyStorage.sol": {
        "keccak256": "0xc2e4978e759d283457b02b90a77b9a4ea359eeade41b8937c57d6dc3026ff04c",
        "urls": [
          "bzz-raw://9d2aa0835f096d4d7dcf3100e05d45a1b7b838d469bd78ba5c6eaf0dcebceb05",
          "dweb:/ipfs/QmXyt6ZcHWkSsyREC6fhvsD1z6EVzuMcJadjXDcds6smJY"
        ],
        "license": null
      },
      "src/amb/interfaces/ITelepathy.sol": {
        "keccak256": "0x8e0f1c5f335402c1581387491da7571cb1cb3a07e622db9fa15c6c2a06b2546a",
        "urls": [
          "bzz-raw://85900c5ae744016f22d1452446e9cc580721a3e8264c09605390a8decd7b8189",
          "dweb:/ipfs/QmRZh5L18VxGeQ1niPzRFL9J4iigiFbp2knxQjRP3LmH9V"
        ],
        "license": null
      },
      "src/libraries/BeaconChainForks.sol": {
        "keccak256": "0xdb54fb41ea01396656af5e6840553244d9fece2bb6580894f05ec6ca27628d83",
        "urls": [
          "bzz-raw://8f4413e51082324ca158da2b4047f611a46a16e2c36238ddd5fee4f3d37ba1db",
          "dweb:/ipfs/QmX2Pxju2Qu82v6b7WQxdoovSikDWH46dE3Qm1NdfqFh3v"
        ],
        "license": null
      },
      "src/libraries/MessageEncoding.sol": {
        "keccak256": "0xa7d014c247a34bbfcfa9175ad175483cf6cc1c0a0d8277dc30e0f7e47f1707a7",
        "urls": [
          "bzz-raw://8ccfb15112c94523fed2ecb6a87ca4a6f891f09b9831a58c05c70ff04b8082dc",
          "dweb:/ipfs/Qma9zqMUS5ygBKaRAZeqLr4twtyTqBZTbSHu8uRDdLmojk"
        ],
        "license": null
      },
      "src/libraries/SimpleSerialize.sol": {
        "keccak256": "0xd19fff646b44f7406dd6aeb45abd38c8c0de4bb15ee524569c3a3d89aa6e7054",
        "urls": [
          "bzz-raw://2b88dd0c6d895dd013ea7a1896ee1a4012cfa07eb391e610f90602fd0f8a3e5a",
          "dweb:/ipfs/QmUHD3dCxg8TZBX5RgHyKMBSZgLikqw1XZgZLdfGCLHqhY"
        ],
        "license": null
      },
      "src/libraries/StateProofHelper.sol": {
        "keccak256": "0x70e27315c29cb4c7d48a94f42190ffdc6eb01563b21e69a53313cae0dfc64c47",
        "urls": [
          "bzz-raw://1282d7634bf116983291805d99dda36a2304dbe6ebebc8d488d218d948f3b4a6",
          "dweb:/ipfs/QmdZreFEWMABoZLwq1J91BF5ja5ZbXe9EQkAd28R1VxJkk"
        ],
        "license": null
      },
      "src/libraries/Typecast.sol": {
        "keccak256": "0x3d94eaa60f2d48c5f21e443c23f1c140b2a2ace09c0e1350810dd2b09faf7c1a",
        "urls": [
          "bzz-raw://adeaa9e8df8cfed643c6b25c1726da69658358eca52c0f5fc2972a2abc92e65d",
          "dweb:/ipfs/QmT3UKsZUzzRFg1H6yXfhGn4jEaVkKHJx2PuneebcqKgAr"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lightclient/interfaces/ILightClient.sol": {
        "keccak256": "0x17f71ba0004a4af61cae3499a05decfe0cb2a4479f372eab3e1e946b7e03a051",
        "urls": [
          "bzz-raw://a3d5c74269ab86e0c99c5caedc7c4cd4819c2f1a57bb8217b0dc380b10e14070",
          "dweb:/ipfs/QmPk5DsfMAF535JmB4rB5hxFFTr6EmD1AXCvK7zNUu3EEo"
        ],
        "license": null
      },
      "src/pubsub/PubSubStorage.sol": {
        "keccak256": "0xb48749438ffb733c688167748b15c8969e8101e3135798a48c1c37d6f5df8a6b",
        "urls": [
          "bzz-raw://121c53ba9e7d0186a4440ce2f8c9106d0c5e16ff5028efb1c36cd029d3e57f6e",
          "dweb:/ipfs/QmSSBhEX3QJBmE2Rof99cwmFJAesGdLuSRBoYfHNSWJXQL"
        ],
        "license": null
      },
      "src/pubsub/TelepathySubscriber.sol": {
        "keccak256": "0xc2821363e4a6379a8d879954726e91881b011c5ca573ddc09aa927737b233bfd",
        "urls": [
          "bzz-raw://9922a70f814a7caac3f4c5119bee155d9dc1ac0a4d6090fc4753ac9ad485eec4",
          "dweb:/ipfs/Qma4cKKo2d7pkMmzKXVudtr43VSmQaRpH2HaDvWVR8PPj3"
        ],
        "license": null
      },
      "src/pubsub/interfaces/IPubSub.sol": {
        "keccak256": "0xbf3fbeb90e44355f0d18502908551df018a68e89942527cd1102b33b24a4cd8c",
        "urls": [
          "bzz-raw://d8f40b30a82557e93093614445463bfc149e01035c69f61cf2fe1a465bce0a2a",
          "dweb:/ipfs/QmQh4GAtaDCKTCBLUxPmDgWaDt2GeFUjcSki3s4n26Uswt"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/pubsub/TelepathySubscriber.sol",
    "id": 49143,
    "exportedSymbols": {
      "ISubscriber": [
        49205
      ],
      "PubSubStorage": [
        48552
      ],
      "Subscription": [
        49156
      ],
      "SubscriptionStatus": [
        49147
      ],
      "TelepathySubscriber": [
        49142
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2535:125",
    "nodes": [
      {
        "id": 48981,
        "nodeType": "PragmaDirective",
        "src": "0:24:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 48985,
        "nodeType": "ImportDirective",
        "src": "26:96:125",
        "nodes": [],
        "absolutePath": "src/pubsub/interfaces/IPubSub.sol",
        "file": "src/pubsub/interfaces/IPubSub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49143,
        "sourceUnit": 49244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48982,
              "name": "Subscription",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49156,
              "src": "34:12:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48983,
              "name": "SubscriptionStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49147,
              "src": "48:18:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48984,
              "name": "ISubscriber",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49205,
              "src": "68:11:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48987,
        "nodeType": "ImportDirective",
        "src": "124:59:125",
        "nodes": [],
        "absolutePath": "src/pubsub/PubSubStorage.sol",
        "file": "src/pubsub/PubSubStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49143,
        "sourceUnit": 48553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48986,
              "name": "PubSubStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48552,
              "src": "132:13:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49142,
        "nodeType": "ContractDefinition",
        "src": "335:2199:125",
        "nodes": [
          {
            "id": 48996,
            "nodeType": "ErrorDefinition",
            "src": "400:56:125",
            "nodes": [],
            "errorSelector": "8e04200e",
            "name": "SubscriptionAlreadyActive",
            "nameLocation": "406:25:125",
            "parameters": {
              "id": 48995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48994,
                  "mutability": "mutable",
                  "name": "subscriptionId",
                  "nameLocation": "440:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 48996,
                  "src": "432:22:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48993,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "431:24:125"
            }
          },
          {
            "id": 49000,
            "nodeType": "ErrorDefinition",
            "src": "461:52:125",
            "nodes": [],
            "errorSelector": "00323a52",
            "name": "SubscriptionNotActive",
            "nameLocation": "467:21:125",
            "parameters": {
              "id": 48999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48998,
                  "mutability": "mutable",
                  "name": "subscriptionId",
                  "nameLocation": "497:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49000,
                  "src": "489:22:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:24:125"
            }
          },
          {
            "id": 49006,
            "nodeType": "ErrorDefinition",
            "src": "518:57:125",
            "nodes": [],
            "errorSelector": "f0120c84",
            "name": "InvalidSlotRange",
            "nameLocation": "524:16:125",
            "parameters": {
              "id": 49005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49002,
                  "mutability": "mutable",
                  "name": "startSlot",
                  "nameLocation": "548:9:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49006,
                  "src": "541:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49001,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49004,
                  "mutability": "mutable",
                  "name": "endSlot",
                  "nameLocation": "566:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49006,
                  "src": "559:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49003,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:34:125"
            }
          },
          {
            "id": 49082,
            "nodeType": "FunctionDefinition",
            "src": "837:960:125",
            "nodes": [],
            "body": {
              "id": 49081,
              "nodeType": "Block",
              "src": "1065:732:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49026,
                      "mutability": "mutable",
                      "name": "subscription",
                      "nameLocation": "1095:12:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 49081,
                      "src": "1075:32:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                        "typeString": "struct Subscription"
                      },
                      "typeName": {
                        "id": 49025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49024,
                          "name": "Subscription",
                          "nameLocations": [
                            "1075:12:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49156,
                          "src": "1075:12:125"
                        },
                        "referencedDeclaration": 49156,
                        "src": "1075:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$49156_storage_ptr",
                          "typeString": "struct Subscription"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49033,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49028,
                        "name": "_sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49009,
                        "src": "1135:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49029,
                        "name": "_sourceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49011,
                        "src": "1151:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49030,
                        "name": "_callbackAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49013,
                        "src": "1167:16:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49031,
                        "name": "_eventSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49015,
                        "src": "1185:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 49027,
                      "name": "Subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49156,
                      "src": "1122:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Subscription_$49156_storage_ptr_$",
                        "typeString": "type(struct Subscription storage pointer)"
                      }
                    },
                    "id": 49032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:73:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                      "typeString": "struct Subscription memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1075:120:125"
                },
                {
                  "assignments": [
                    49035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49035,
                      "mutability": "mutable",
                      "name": "subscriptionId",
                      "nameLocation": "1213:14:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 49081,
                      "src": "1205:22:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49034,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1205:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49042,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49039,
                            "name": "subscription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49026,
                            "src": "1251:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                              "typeString": "struct Subscription memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                              "typeString": "struct Subscription memory"
                            }
                          ],
                          "expression": {
                            "id": 49037,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1240:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1244:6:125",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1240:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1240:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 49036,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1230:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 49041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:35:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1205:60:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                      "typeString": "enum SubscriptionStatus"
                    },
                    "id": 49048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 49043,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48546,
                        "src": "1280:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "mapping(bytes32 => enum SubscriptionStatus)"
                        }
                      },
                      "id": 49045,
                      "indexExpression": {
                        "id": 49044,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49035,
                        "src": "1294:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1280:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 49046,
                        "name": "SubscriptionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "1313:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "type(enum SubscriptionStatus)"
                        }
                      },
                      "id": 49047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1332:10:125",
                      "memberName": "SUBSCRIBED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49146,
                      "src": "1313:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "src": "1280:62:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49054,
                  "nodeType": "IfStatement",
                  "src": "1276:141:125",
                  "trueBody": {
                    "id": 49053,
                    "nodeType": "Block",
                    "src": "1344:73:125",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 49050,
                              "name": "subscriptionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49035,
                              "src": "1391:14:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 49049,
                            "name": "SubscriptionAlreadyActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48996,
                            "src": "1365:25:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 49051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1365:41:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49052,
                        "nodeType": "RevertStatement",
                        "src": "1358:48:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 49060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49055,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48546,
                        "src": "1426:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "mapping(bytes32 => enum SubscriptionStatus)"
                        }
                      },
                      "id": 49057,
                      "indexExpression": {
                        "id": 49056,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49035,
                        "src": "1440:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1426:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 49058,
                        "name": "SubscriptionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "1458:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "type(enum SubscriptionStatus)"
                        }
                      },
                      "id": 49059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1477:10:125",
                      "memberName": "SUBSCRIBED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49146,
                      "src": "1458:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "src": "1426:61:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                      "typeString": "enum SubscriptionStatus"
                    }
                  },
                  "id": 49061,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:61:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 49064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49062,
                      "name": "_endSlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49019,
                      "src": "1589:8:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 49063,
                      "name": "_startSlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49017,
                      "src": "1600:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1589:21:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49071,
                  "nodeType": "IfStatement",
                  "src": "1585:97:125",
                  "trueBody": {
                    "id": 49070,
                    "nodeType": "Block",
                    "src": "1612:70:125",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 49066,
                              "name": "_startSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49017,
                              "src": "1650:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 49067,
                              "name": "_endSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49019,
                              "src": "1662:8:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 49065,
                            "name": "InvalidSlotRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49006,
                            "src": "1633:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint64_$_t_uint64_$returns$__$",
                              "typeString": "function (uint64,uint64) pure"
                            }
                          },
                          "id": 49068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:38:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49069,
                        "nodeType": "RevertStatement",
                        "src": "1626:45:125"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49073,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49035,
                        "src": "1707:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49074,
                        "name": "_startSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49017,
                        "src": "1723:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 49075,
                        "name": "_endSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49019,
                        "src": "1735:8:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 49076,
                        "name": "subscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49026,
                        "src": "1745:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                          "typeString": "struct Subscription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                          "typeString": "struct Subscription memory"
                        }
                      ],
                      "id": 49072,
                      "name": "Subscribe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49168,
                      "src": "1697:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_uint64_$_t_struct$_Subscription_$49156_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint64,uint64,struct Subscription memory)"
                      }
                    },
                    "id": 49077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:61:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49078,
                  "nodeType": "EmitStatement",
                  "src": "1692:66:125"
                },
                {
                  "expression": {
                    "id": 49079,
                    "name": "subscriptionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49035,
                    "src": "1776:14:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 49023,
                  "id": 49080,
                  "nodeType": "Return",
                  "src": "1769:21:125"
                }
              ]
            },
            "baseFunctions": [
              49193
            ],
            "documentation": {
              "id": 49007,
              "nodeType": "StructuredDocumentation",
              "src": "581:251:125",
              "text": "@dev The block ranges use as a signal to off-chain, and are NOT enforced by the publisher.\n     If events should only a certain range should be valid, the callbackAddress should do their\n     own validation when handling the publish."
            },
            "functionSelector": "65138959",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribe",
            "nameLocation": "846:9:125",
            "parameters": {
              "id": 49020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49009,
                  "mutability": "mutable",
                  "name": "_sourceChainId",
                  "nameLocation": "872:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "865:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49008,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49011,
                  "mutability": "mutable",
                  "name": "_sourceAddress",
                  "nameLocation": "904:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "896:22:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49013,
                  "mutability": "mutable",
                  "name": "_callbackAddress",
                  "nameLocation": "936:16:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "928:24:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49015,
                  "mutability": "mutable",
                  "name": "_eventSig",
                  "nameLocation": "970:9:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "962:17:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49014,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49017,
                  "mutability": "mutable",
                  "name": "_startSlot",
                  "nameLocation": "996:10:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "989:17:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49016,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49019,
                  "mutability": "mutable",
                  "name": "_endSlot",
                  "nameLocation": "1023:8:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "1016:15:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 49018,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "855:182:125"
            },
            "returnParameters": {
              "id": 49023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49082,
                  "src": "1056:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49021,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:9:125"
            },
            "scope": 49142,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49141,
            "nodeType": "FunctionDefinition",
            "src": "1888:644:125",
            "nodes": [],
            "body": {
              "id": 49140,
              "nodeType": "Block",
              "src": "2022:510:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49096,
                      "mutability": "mutable",
                      "name": "subscription",
                      "nameLocation": "2052:12:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 49140,
                      "src": "2032:32:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                        "typeString": "struct Subscription"
                      },
                      "typeName": {
                        "id": 49095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49094,
                          "name": "Subscription",
                          "nameLocations": [
                            "2032:12:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49156,
                          "src": "2032:12:125"
                        },
                        "referencedDeclaration": 49156,
                        "src": "2032:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$49156_storage_ptr",
                          "typeString": "struct Subscription"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49104,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49098,
                        "name": "_sourceChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49085,
                        "src": "2092:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 49099,
                        "name": "_sourceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49087,
                        "src": "2108:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2124:3:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2128:6:125",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2124:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49102,
                        "name": "_eventSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49089,
                        "src": "2136:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 49097,
                      "name": "Subscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49156,
                      "src": "2079:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Subscription_$49156_storage_ptr_$",
                        "typeString": "type(struct Subscription storage pointer)"
                      }
                    },
                    "id": 49103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:67:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                      "typeString": "struct Subscription memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2032:114:125"
                },
                {
                  "assignments": [
                    49106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49106,
                      "mutability": "mutable",
                      "name": "subscriptionId",
                      "nameLocation": "2164:14:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 49140,
                      "src": "2156:22:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49105,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49110,
                            "name": "subscription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49096,
                            "src": "2202:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                              "typeString": "struct Subscription memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                              "typeString": "struct Subscription memory"
                            }
                          ],
                          "expression": {
                            "id": 49108,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2191:3:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 49109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2195:6:125",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2191:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 49111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2191:24:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 49107,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2181:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 49112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:35:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2156:60:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                      "typeString": "enum SubscriptionStatus"
                    },
                    "id": 49119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 49114,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48546,
                        "src": "2231:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "mapping(bytes32 => enum SubscriptionStatus)"
                        }
                      },
                      "id": 49116,
                      "indexExpression": {
                        "id": 49115,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49106,
                        "src": "2245:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2231:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 49117,
                        "name": "SubscriptionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "2264:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "type(enum SubscriptionStatus)"
                        }
                      },
                      "id": 49118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2283:11:125",
                      "memberName": "UNSUBSCIBED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49145,
                      "src": "2264:30:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "src": "2231:63:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49125,
                  "nodeType": "IfStatement",
                  "src": "2227:138:125",
                  "trueBody": {
                    "id": 49124,
                    "nodeType": "Block",
                    "src": "2296:69:125",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 49121,
                              "name": "subscriptionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49106,
                              "src": "2339:14:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 49120,
                            "name": "SubscriptionNotActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49000,
                            "src": "2317:21:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 49122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:37:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49123,
                        "nodeType": "RevertStatement",
                        "src": "2310:44:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 49131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49126,
                        "name": "subscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48546,
                        "src": "2374:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "mapping(bytes32 => enum SubscriptionStatus)"
                        }
                      },
                      "id": 49128,
                      "indexExpression": {
                        "id": 49127,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49106,
                        "src": "2388:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2374:29:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 49129,
                        "name": "SubscriptionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "2406:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SubscriptionStatus_$49147_$",
                          "typeString": "type(enum SubscriptionStatus)"
                        }
                      },
                      "id": 49130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2425:11:125",
                      "memberName": "UNSUBSCIBED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49145,
                      "src": "2406:30:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                        "typeString": "enum SubscriptionStatus"
                      }
                    },
                    "src": "2374:62:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SubscriptionStatus_$49147",
                      "typeString": "enum SubscriptionStatus"
                    }
                  },
                  "id": 49132,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:62:125"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49134,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49106,
                        "src": "2464:14:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49135,
                        "name": "subscription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49096,
                        "src": "2480:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                          "typeString": "struct Subscription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Subscription_$49156_memory_ptr",
                          "typeString": "struct Subscription memory"
                        }
                      ],
                      "id": 49133,
                      "name": "Unsubscribe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49176,
                      "src": "2452:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Subscription_$49156_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct Subscription memory)"
                      }
                    },
                    "id": 49136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:41:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49137,
                  "nodeType": "EmitStatement",
                  "src": "2447:46:125"
                },
                {
                  "expression": {
                    "id": 49138,
                    "name": "subscriptionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49106,
                    "src": "2511:14:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 49093,
                  "id": 49139,
                  "nodeType": "Return",
                  "src": "2504:21:125"
                }
              ]
            },
            "baseFunctions": [
              49204
            ],
            "documentation": {
              "id": 49083,
              "nodeType": "StructuredDocumentation",
              "src": "1803:80:125",
              "text": "@dev Only the original callbackAddress contract will be able to unsubscribe."
            },
            "functionSelector": "97229719",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsubscribe",
            "nameLocation": "1897:11:125",
            "parameters": {
              "id": 49090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49085,
                  "mutability": "mutable",
                  "name": "_sourceChainId",
                  "nameLocation": "1916:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49141,
                  "src": "1909:21:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 49084,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49087,
                  "mutability": "mutable",
                  "name": "_sourceAddress",
                  "nameLocation": "1940:14:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49141,
                  "src": "1932:22:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49089,
                  "mutability": "mutable",
                  "name": "_eventSig",
                  "nameLocation": "1964:9:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 49141,
                  "src": "1956:17:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49088,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:66:125"
            },
            "returnParameters": {
              "id": 49093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49141,
                  "src": "2009:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49091,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2008:9:125"
            },
            "scope": 49142,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48989,
              "name": "ISubscriber",
              "nameLocations": [
                "367:11:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49205,
              "src": "367:11:125"
            },
            "id": 48990,
            "nodeType": "InheritanceSpecifier",
            "src": "367:11:125"
          },
          {
            "baseName": {
              "id": 48991,
              "name": "PubSubStorage",
              "nameLocations": [
                "380:13:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48552,
              "src": "380:13:125"
            },
            "id": 48992,
            "nodeType": "InheritanceSpecifier",
            "src": "380:13:125"
          }
        ],
        "canonicalName": "TelepathySubscriber",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48988,
          "nodeType": "StructuredDocumentation",
          "src": "185:150:125",
          "text": "@title TelepathySubscriber\n @author Succinct Labs\n @notice This allows contracts to subscribe to cross-chain events from a source contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49142,
          48552,
          49205
        ],
        "name": "TelepathySubscriber",
        "nameLocation": "344:19:125",
        "scope": 49143,
        "usedErrors": [
          48996,
          49000,
          49006
        ]
      }
    ]
  },
  "id": 125
}